#Localhost properties

spring.datasource.url=jdbc:postgresql://localhost:5432/primesnipers
spring.datasource.username=PiousAn
spring.datasource.password=Pious123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=org.postgresql.Driver

###Docker properties
#
#spring.datasource.url=${db-url}
#spring.datasource.username=${db-username}
#spring.datasource.password=${db-password}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.datasource.driver-class-name=org.postgresql.Driver


# Render.com properties
#spring.datasource.url=${DATABASE_URL}
#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.password=${DATABASE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.open-in-view=false




spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.mode=HTML

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

server.port=8081

server.error.include-message=always


spring.security.oauth2.client.registration.keycloak.client-id=PrimesniperApi
spring.security.oauth2.client.registration.keycloak.client-secret=3ExCPXCuNu84ENwSRUR6oPfqa9eBg37J
spring.security.oauth2.client.registration.keycloak.client-name=PrimesniperApplication
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/PrimesniperRealm



# OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/PrimesniperRealm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/PrimesniperRealm/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.client-id=PrimesniperApi

jwt.auth.converter.principle-attribute = ""
jwt.auth.converter.resource-id = ""