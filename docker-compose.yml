version: '3'

services:
  db:
    image: postgres:latest
    container_name: postgres-container
    environment:
       POSTGRES_DB: primesnipersdb
       POSTGRES_USER: PiousAn
       POSTGRES_PASSWORD: Pious123
    ports:
      - "5432:5432"
    volumes:
      - C:\postgres_datapart:/var/lib/postgresql/data
    restart: always
#
#  kafka:
#    image: docker.io/bitnami/kafka:3.6.1
#    hostname: kafka
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      - KAFKA_ENABLE_KRAFT=yes
#      - KAFKA_CFG_PROCESS_ROLES=broker,controller
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_NODE_ID=1
#      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
#      - BITNAMI_DEBUG=yes
#      - KAFKA_CFG_NUM_PARTITIONS=2

  backend:
    build: ./BACK-END
    container_name: primesniper-container-backend
    environment:
       db-url: jdbc:postgresql://db:5432/primesnipersdb
       db-username: PiousAn
       db-password: Pious123
    ports:
      - "8081:8081"
    depends_on:
      - db
#      - keycloak
    restart: always

  frontend:
    build:
      context: ./FRONT-END
      dockerfile: Dockerfile
    container_name: primesniper-container-frontend
    volumes:
      - .:/app
    ports:
      - "4700:80"
    links:
      - backend
     

#
#  keycloak:
#    image: quay.io/keycloak/keycloak:23.0.6
#    container_name: keycloak-container
#    command: start-dev
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      # ... (other Keycloak environment variables)
#    ports:
#      - "8080:8080"
#    depends_on:
#      - db
#
#volumes:
#  kafka_data:

